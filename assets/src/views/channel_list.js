// Generated by CoffeeScript 1.4.0
var BTN_WIDTH, ChannelListView, TAB_WIDTH,
  _this = this;

TAB_WIDTH = 120;

BTN_WIDTH = 34;

ChannelListView = Backbone.View.extend({
  el: '#channels',
  events: {
    'click #slide-prev': 'slidePrev',
    'click #slide-next': 'slideNext'
  },
  initialize: function() {
    irc.chatWindows.bind('add', this.addChannel, this);
    $('.slide').css('display', 'inline-block');
    return this.channelTabs = [];
  },
  addChannel: function(chatWindow) {
    var $el, name, view;
    $el = $(this.el);
    view = new ChannelTabView({
      model: chatWindow
    });
    this.channelTabs.push(view);
    $el.append(view.render());
    name = chatWindow.get('name');
    if (name[0] === '#' && name === 'status') {
      view.setActive();
      if ($el.css('position') === 'fixed' && !(chatWindow.get('initial'))) {
        return $el.css('left', -1 * (this.channelTabs.length - 1) * TAB_WIDTH + BTN_WIDTH + 'px');
      }
    }
  },
  slidePrev: function() {
    return setTimeout((function() {
      var $el, left;
      $el = $(this.el);
      if ($el.css('position') !== 'fixed') {
        return;
      }
      left = parseInt($el.css('left'), 10);
      if (left < BTN_WIDTH) {
        return $el.animate({
          'left': left + TAB_WIDTH + 'px'
        }, 100);
      }
    }), 200);
  },
  slideNext: function() {
    return setTimeout((function() {
      var $el, left;
      $el = $(this.el);
      if ($el.css('position') !== 'fixed') {
        return;
      }
      left = parseInt($el.css('left'), 10);
      if (left >= -1 * (that.channelTabs.length - 2) * TAB_WIDTH) {
        return $el.animate({
          'left': left - TAB_WIDTH + 'px'
        }, 100);
      }
    }), 200);
  }
});
