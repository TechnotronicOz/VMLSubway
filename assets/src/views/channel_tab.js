// Generated by CoffeeScript 1.4.0
var ChannelTabView;

ChannelTabView = Backbone.View.extend({
  className: 'channel',
  events: {
    'click': 'setActive',
    'click .close-button': 'close'
  },
  initialize: function() {
    this.model.stream.bind('add', this.updateUnreadCounts, this);
    return this.model.bind('destroy', this.switchAndRemove, this).bind('change:active', this.removeUnread, this);
  },
  render: function() {
    var self, tmpl;
    self = this;
    tmpl = ich.channel({
      name: this.model.get('name'),
      notStatus: function() {
        return self.model.get('type' !== 'status');
      }
    });
    $(this.el).html(tmpl);
    return this;
  },
  setActive: function() {
    if (!this.model.get('active')) {
      irc.chatWindows.setActive(this.model);
    }
    $(this.el).addClass('active').siblings().removeClass('active');
    return this.removeUnread;
  },
  updateUnreadCounts: function() {
    var unread, unreadMentions;
    unread = this.model.get('unread');
    unreadMentions = this.model.get('unreadMentions');
    if (unread > 0) {
      this.$('.unread').text(unread).show();
    } else {
      this.$('.unread').hide();
    }
    if (unreadMentions > 0) {
      return this.$('.unread-mentions').text(unreadMentions).show();
    } else {
      return this.$('.unread-mentions').hide();
    }
  },
  removeUnread: function() {
    if (this.model.get('active' === false)) {
      return;
    }
    this.$el.children('.unread, .unread-mentions').hide();
    return this.model.set({
      unread: 0,
      unreadMentions: 0
    });
  },
  close: function(e) {
    e.stopPropagation();
    if (this.model.get('type' === 'channel')) {
      return irc.socket.emit('part', this.model.get('name'));
    } else {
      irc.socket.emit('part_pm', this.model.get('name'));
      return this.model.destroy();
    }
  },
  switchAndRemove: function() {
    $nextTab;

    var $nextTab;
    if ($(this.el).hasClass('active')) {
      if ($(this.el).next.length) {
        $nextTab = $(this.el).next();
      } else {
        $nextTab = $(this.el).prev();
      }
    }
    this.remove();
    if (typeof $nextTab.click === 'function') {
      return $nextTab.click();
    }
  }
});
